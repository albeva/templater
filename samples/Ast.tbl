#
# Ast nodes
#

table Root(id) = [
    Root
    Stmt
    Expr
    Decl
]

table Fields(node type id default) = [
    Module    unsigned           fileId          -
    |         bool               hasImplicitMain -
    |         "List<Import>"     imports         -
    |         "List<StmtList>"   stmtList        -
    |         "SymbolTable*"     symbolTable     nullptr
    ExprList  "List<Expression>" exprs           -
]

table Basic(id members = "") = [
    Module        @Fields(node == table.id)
    ExprList
    Attribute
    AttributeList
    FuncParamList
    DeclList
]

table Stmt(id) = [
    Import
    StmtList
    ExprStmt
    FuncStmt
    ReturnStmt
    IfStmt
    ForStmt
    DoLoopStmt
    ContinuationStmt
]

table Decl(id) = [
    VarDecl
    FuncDecl
    FuncParamDecl
    UdtDecl
    TypeAlias
]

table Type(id) = [
    TypeExpr
    TypeOf
]

table Expr(id) = [
    AssignExpr
    IdentExpr
    CallExpr
    LiteralExpr
    UnaryExpr
    BinaryExpr
    CastExpr
    IfExpr
    Dereference
    AddressOf
    MemberAccess
]

table Content = Basic + Stmt + Decl + Type + Expr
