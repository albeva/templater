name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Install latest GCC
      uses: egor-tensin/setup-gcc@v1
      with:
        version: 12

    - name: Configure CMake
      run: cmake -S . -G "Unix Makefiles" --preset="unixlike-gcc-debug"
      env:
        CC:   gcc-12
        CXX:  g++-12

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ./build/unixlike-gcc-debug

    - name: Test
      working-directory: ./build/unixlike-gcc-debug
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest

